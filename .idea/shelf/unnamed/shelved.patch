Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
deleted file mode 100644
--- a/.gitignore	(revision 53cccefe65df7ac0ced728936086db2835c1ce51)
+++ /dev/null	(revision 53cccefe65df7ac0ced728936086db2835c1ce51)
@@ -1,130 +0,0 @@
-# Logs
-logs
-*.log
-npm-debug.log*
-yarn-debug.log*
-yarn-error.log*
-lerna-debug.log*
-.pnpm-debug.log*
-
-# Diagnostic reports (https://nodejs.org/api/report.html)
-report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
-
-# Runtime data
-pids
-*.pid
-*.seed
-*.pid.lock
-
-# Directory for instrumented libs generated by jscoverage/JSCover
-lib-cov
-
-# Coverage directory used by tools like istanbul
-coverage
-*.lcov
-
-# nyc test coverage
-.nyc_output
-
-# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
-.grunt
-
-# Bower dependency directory (https://bower.io/)
-bower_components
-
-# node-waf configuration
-.lock-wscript
-
-# Compiled binary addons (https://nodejs.org/api/addons.html)
-build/Release
-
-# Dependency directories
-node_modules/
-jspm_packages/
-
-# Snowpack dependency directory (https://snowpack.dev/)
-web_modules/
-
-# TypeScript cache
-*.tsbuildinfo
-
-# Optional npm cache directory
-.npm
-
-# Optional eslint cache
-.eslintcache
-
-# Optional stylelint cache
-.stylelintcache
-
-# Microbundle cache
-.rpt2_cache/
-.rts2_cache_cjs/
-.rts2_cache_es/
-.rts2_cache_umd/
-
-# Optional REPL history
-.node_repl_history
-
-# Output of 'npm pack'
-*.tgz
-
-# Yarn Integrity file
-.yarn-integrity
-
-# dotenv environment variable files
-.env
-.env.development.local
-.env.test.local
-.env.production.local
-.env.local
-
-# parcel-bundler cache (https://parceljs.org/)
-.cache
-.parcel-cache
-
-# Next.js build output
-.next
-out
-
-# Nuxt.js build / generate output
-.nuxt
-dist
-
-# Gatsby files
-.cache/
-# Comment in the public line in if your project uses Gatsby and not Next.js
-# https://nextjs.org/blog/next-9-1#public-directory-support
-# public
-
-# vuepress build output
-.vuepress/dist
-
-# vuepress v2.x temp and cache directory
-.temp
-.cache
-
-# Docusaurus cache and generated files
-.docusaurus
-
-# Serverless directories
-.serverless/
-
-# FuseBox cache
-.fusebox/
-
-# DynamoDB Local files
-.dynamodb/
-
-# TernJS port file
-.tern-port
-
-# Stores VSCode versions used for testing VSCode extensions
-.vscode-test
-
-# yarn v2
-.yarn/cache
-.yarn/unplugged
-.yarn/build-state.yml
-.yarn/install-state.gz
-.pnp.*
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
deleted file mode 100644
--- a/README.md	(revision 53cccefe65df7ac0ced728936086db2835c1ce51)
+++ /dev/null	(revision 53cccefe65df7ac0ced728936086db2835c1ce51)
@@ -1,2 +0,0 @@
-# moonpig-technical-assessment
-Moonpig's Technical Assessment (Public)
Index: src/types.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/types.ts b/src/types.ts
new file mode 100644
--- /dev/null	(date 1691415055705)
+++ b/src/types.ts	(date 1691415055705)
@@ -0,0 +1,6 @@
+export type Card = {
+    id: string
+    title: string
+    price: number
+    images: { url?: string; alt: string }[]
+}
\ No newline at end of file
Index: .env
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.env b/.env
new file mode 100644
--- /dev/null	(date 1691415869341)
+++ b/.env	(date 1691415869341)
@@ -0,0 +1,1 @@
+REACT_APP_GITHUB_TOKEN=
\ No newline at end of file
Index: src/components/Navigation/Header.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Navigation/Header.tsx b/src/components/Navigation/Header.tsx
new file mode 100644
--- /dev/null	(date 1691416264221)
+++ b/src/components/Navigation/Header.tsx	(date 1691416264221)
@@ -0,0 +1,48 @@
+import {FC} from "react";
+import {Box} from "@mui/system";
+import {Container} from "postcss";
+import {Link} from "@mui/material";
+import {NavLink} from "@/components/Navigation/NavLink";
+
+export const Header: FC = () => {
+    return (
+        <Box sx={{ borderBottom: '2px solid var(--main-border-color)' }}>
+            <Container sx={{ padding: '16px' }}>
+                <Link
+                    href={'/'}
+                    style={{
+                        display: 'flex',
+                        height: '48px',
+                    }}
+                >
+                    <svg
+                        xmlns="http://www.w3.org/2000/svg"
+                        viewBox="0 0 858.4 208.17"
+                        aria-hidden="true"
+                        className="sc-pIjat jUZtAW"
+                    >
+                        <path
+                            d="m169.58 80.33 6.49 74.15-25.93 2.27-6.14-69.6c-1-12.06-10.55-21.54-24-20.36C106.84 67.94 98.87 79 99.92 91l6.09 69.6-25.93 2.27L74 93.28c-1.06-12.06-10.6-21.54-24-20.36-13.21 1.15-21.19 12.16-20.13 24.22l6.13 69.6L10 169 0 54.37l24.56-2.15.72 8.19c6.7-7.23 16.12-12.18 28-13.22C66.88 46 78.73 50.46 87 58.68c7.41-9.59 19-16.1 33.32-17.35 26.62-2.33 47.11 14.44 49.26 39zm204.61-47.4c34.7 0 60 26.26 60 60.28 0 33.11-25.34 59.82-60 59.82s-60-26.71-60-59.82c-.05-34.03 25.3-60.28 60-60.28zm0 94.52c20.09 0 34-14.61 34-34.25 0-20.09-13.93-34.7-34-34.7s-34 14.61-34 34.7c-.02 19.64 13.91 34.25 34 34.25zM550 109.9l-6.25 71.42-25.91-2.32 5.85-66.87c1.21-13.87-7.36-25.85-22.6-27.19-15-1.31-25.77 9-27 22.85l-5.85 66.87-25.93-2.27 10-114.63 25.7 2.25-.76 8.64c8.35-6.37 19.17-9.55 31.23-8.5 26.43 2.36 43.82 23.59 41.52 49.75zm133-15.31c0 33.33-23.74 59.82-57.31 59.82-13.93 0-26-4.8-34.7-12.56v58.45h-26V36.83h25.8V47.1c8.9-8 21-12.79 34.93-12.79 33.49.01 57.28 26.26 57.28 60.28zm-26 0c0-20.09-13.7-34.93-33.33-34.93-19.94 0-33.67 14.84-33.67 34.93 0 19.63 13.7 34.48 33.56 34.48 19.67 0 33.37-14.84 33.37-34.48zm201.4-47.12-9.73 111.22C846 189.62 821 210.81 787.76 207.9c-26.16-2.29-44.88-18.82-49.77-41.48l24.89-6.76c2.54 12.83 12.52 22 27.08 23.22 18 1.57 31.32-9.64 32.86-27.15l1-11.37c-9.09 7-21.09 10.53-34.28 9.38-31.39-2.75-52.4-29.79-49.61-61.64 2.81-32.07 28-55.08 59.58-52.31 13.19 1.15 24.6 7 32.32 15.66l.9-10.23zm-29.82 52.63C830.2 81.67 818.2 66.87 800 65.28s-32.58 10.9-34.19 29.32c-1.55 17.74 10.45 32.54 28.64 34.13s32.55-10.9 34.14-28.64zM245.24 59.18c-34.7 0-60 26.26-60 60.28 0 33.11 25.34 59.82 60 59.82s60-26.71 60-59.82c.05-34.03-25.29-60.28-60-60.28zm0 94.52c-20.09 0-34-14.61-34-34.25 0-20.09 13.93-34.7 34-34.7s34 14.61 34 34.7c.02 19.64-13.9 34.25-34 34.25zM709.68 0a16.68 16.68 0 0 1 17.12 17.12 17.12 17.12 0 1 1-34.25 0A16.68 16.68 0 0 1 709.68 0zm13 171h-26V55.94h26z"
+                            fill="#FFA6B6"
+                        ></path>
+                    </svg>
+                </Link>
+            </Container>
+
+            <Container
+                sx={{
+                    typography: 'body1',
+                    '& > :not(style) + :not(style)': {
+                        ml: 2,
+                    },
+                    fontFamily: 'sans-serif',
+                    pb: 2,
+                }}
+            >
+                <NavLink href={'/'} value="Home" />
+                <NavLink href={'#'} value="Contact" />
+            </Container>
+        </Box>
+    )
+}
+
Index: src/components/Navigation/Footer.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Navigation/Footer.tsx b/src/components/Navigation/Footer.tsx
new file mode 100644
--- /dev/null	(date 1691416149162)
+++ b/src/components/Navigation/Footer.tsx	(date 1691416149162)
@@ -0,0 +1,17 @@
+import {FC} from "react";
+
+export const Footer: FC = () => {
+    return (
+        <footer
+            style={{
+                borderTop: '2px solid var(--main-border-color)',
+                marginTop: '5vh',
+                padding: '5vh',
+                textAlign: 'center',
+                backgroundColor: 'rgb(248, 248, 249)',
+            }}
+        >
+            Â© Moonpig.com Limited 2023
+        </footer>
+    )
+}
Index: src/components/Gallery/Gallery.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Gallery/Gallery.tsx b/src/components/Gallery/Gallery.tsx
new file mode 100644
--- /dev/null	(date 1691416624394)
+++ b/src/components/Gallery/Gallery.tsx	(date 1691416624394)
@@ -0,0 +1,39 @@
+import {FC, useMemo} from "react";
+import {Card} from "@/types";
+import {GalleryItem} from "@/components/Gallery/GalleryItem";
+import {Box} from "@mui/system";
+import {useLoadCards} from "@/services/hooks/useLoadCards";
+
+export const Gallery: FC = () => {
+    const cards = useLoadCards()
+
+    const cardListData = useMemo(() => {
+        if (cards.state === 'LOADED') {
+            return cards.data
+        }
+
+        return {
+            items: [],
+        }
+    }, [cards])
+
+    const mapItems = (item: Card) => {
+        return (
+            <GalleryItem
+                key={item.id}
+                card={item}
+            />
+        )
+    }
+
+    return (
+        <Box pt={2}>
+            <h1>
+                Moonpig Card Gallery <span>({cardListData.items.length})</span>
+            </h1>
+            <Box display="flex" flexWrap="wrap" alignContent="flex-start" p="16px">
+                {cardListData.items.map(mapItems)}
+            </Box>
+        </Box>
+    )
+}
\ No newline at end of file
Index: src/components/Gallery/GalleryItem.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Gallery/GalleryItem.tsx b/src/components/Gallery/GalleryItem.tsx
new file mode 100644
--- /dev/null	(date 1691415436516)
+++ b/src/components/Gallery/GalleryItem.tsx	(date 1691415436516)
@@ -0,0 +1,22 @@
+import {FC} from "react";
+import {CardMedia} from "@mui/material";
+import {Box, Card as MCard} from "@mui/system";
+import {Card} from "@/types";
+
+type GalleryItemProps = {
+    card: Card,
+}
+
+export const GalleryItem: FC<GalleryItemProps> = ({ card }) => {
+    return (
+        <Box
+            width={{ xs: '100%', sm: '200px' }}
+            mx="auto"
+            mb="16px"
+        >
+            <MCard>
+                <CardMedia component="img" image={card.images[0].url} alt={card.images[0].alt} />
+            </MCard>
+        </Box>
+    )
+}
\ No newline at end of file
Index: src/services/serviceProvider.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/serviceProvider.tsx b/src/services/serviceProvider.tsx
new file mode 100644
--- /dev/null	(date 1691415594778)
+++ b/src/services/serviceProvider.tsx	(date 1691415594778)
@@ -0,0 +1,31 @@
+import {
+    createContext,
+    FC,
+    PropsWithChildren,
+    useContext,
+    useMemo,
+} from 'react'
+import { getCardList, GetCardsList } from './cards'
+
+export type Services = {
+    cardsList: GetCardsList
+}
+
+const serviceContext = createContext<Services>({
+    cardsList: getCardList,
+})
+
+export const ServiceProvider: FC<
+    PropsWithChildren<{ services?: Services }>
+    > = ({ children, services }) => {
+    const value = useMemo<Services>(
+        () => services ?? { cardsList: getCardList },
+        [services],
+    )
+
+    return (
+        <serviceContext.Provider value={value}>{children}</serviceContext.Provider>
+    )
+}
+
+export const useServices = () => useContext(serviceContext)
\ No newline at end of file
Index: src/components/Navigation/NavLink.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Navigation/NavLink.tsx b/src/components/Navigation/NavLink.tsx
new file mode 100644
--- /dev/null	(date 1691416240230)
+++ b/src/components/Navigation/NavLink.tsx	(date 1691416240230)
@@ -0,0 +1,21 @@
+import {FC} from "react";
+import {Link} from "@mui/material";
+
+export const NavLink: FC<NavLinkProps> = ({href, value}) => {
+    return (
+        <Link
+            href={href}
+            style={{
+                textDecoration: 'none',
+                fontWeight: 700,
+            }}
+        >
+            {value}
+        </Link>
+    )
+}
+
+type NavLinkProps = {
+    href: string
+    value: string
+}
Index: src/components/Navigation/index.tx.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Navigation/index.tx.ts b/src/components/Navigation/index.tx.ts
new file mode 100644
--- /dev/null	(date 1691416292941)
+++ b/src/components/Navigation/index.tx.ts	(date 1691416292941)
@@ -0,0 +1,3 @@
+export { Footer } from './Footer'
+export { Header } from './Header'
+export { NavLink } from './NavLink'
\ No newline at end of file
Index: src/services/cards.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/cards.ts b/src/services/cards.ts
new file mode 100644
--- /dev/null	(date 1691415891640)
+++ b/src/services/cards.ts	(date 1691415891640)
@@ -0,0 +1,28 @@
+export type GetCardsList = () => Promise<CardListData>
+
+export type Card = {
+    id: string
+    title: string
+    price: number
+    images: { url?: string; alt: string }[]
+}
+
+export type CardListData = {
+    items: Card[]
+}
+
+export const API_BASE_URL =
+    'https://cors-anywhere.herokuapp.com/https://raw.githubusercontent.com/moonpig/moonpig-technical-assessment/master/public/cards'
+
+export const getCardList: GetCardsList = async () => {
+    const url = `${API_BASE_URL}/data.json?token=${process.env.REACT_APP_GITHUB_TOKEN}`
+
+    const response = await fetch(url, {
+        method: 'GET',
+        headers: { 'content-type': 'application/json' },
+    })
+
+    const json = await response.json()
+
+    return { items: json.items }
+}
\ No newline at end of file
Index: src/services/hooks/useLoadCards.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/hooks/useLoadCards.ts b/src/services/hooks/useLoadCards.ts
new file mode 100644
--- /dev/null	(date 1691415664544)
+++ b/src/services/hooks/useLoadCards.ts	(date 1691415664544)
@@ -0,0 +1,36 @@
+import { useEffect, useState } from 'react'
+import { CardListData } from '../cards'
+import { useServices } from '../serviceProvider'
+
+type CardListLoadingState = {
+    state: 'LOADING'
+    data: undefined
+}
+
+type CardListLoadedState = {
+    state: 'LOADED'
+    data: CardListData
+}
+
+export type CardListState = CardListLoadingState | CardListLoadedState
+
+export const useLoadCards = () => {
+    const { cardsList } = useServices()
+    console.log(cardsList)
+
+    const [cards, setCards] = useState<CardListState>({
+        state: 'LOADING',
+        data: undefined,
+    })
+
+    useEffect(() => {
+        cardsList().then(async data => {
+            setCards({
+                state: 'LOADED',
+                data: data,
+            })
+        })
+    }, [cardsList])
+
+    return cards
+}
\ No newline at end of file
